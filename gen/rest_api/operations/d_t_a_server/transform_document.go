// Code generated by go-swagger; DO NOT EDIT.

package d_t_a_server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// TransformDocumentHandlerFunc turns a function with the right signature into a transform document handler
type TransformDocumentHandlerFunc func(TransformDocumentParams) middleware.Responder

// Handle executing the request and returning a response
func (fn TransformDocumentHandlerFunc) Handle(params TransformDocumentParams) middleware.Responder {
	return fn(params)
}

// TransformDocumentHandler interface for that can handle valid transform document params
type TransformDocumentHandler interface {
	Handle(TransformDocumentParams) middleware.Responder
}

// NewTransformDocument creates a new http.Handler for the transform document operation
func NewTransformDocument(ctx *middleware.Context, handler TransformDocumentHandler) *TransformDocument {
	return &TransformDocument{Context: ctx, Handler: handler}
}

/*
	TransformDocument swagger:route POST /v1/document/transform DTAServer transformDocument

Request to transform a plain text document
*/
type TransformDocument struct {
	Context *middleware.Context
	Handler TransformDocumentHandler
}

func (o *TransformDocument) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewTransformDocumentParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
