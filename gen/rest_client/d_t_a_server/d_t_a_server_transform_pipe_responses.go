// Code generated by go-swagger; DO NOT EDIT.

package d_t_a_server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/theovassiliou/doctrans/gen/rest_models"
)

// DTAServerTransformPipeReader is a Reader for the DTAServerTransformPipe structure.
type DTAServerTransformPipeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DTAServerTransformPipeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDTAServerTransformPipeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDTAServerTransformPipeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDTAServerTransformPipeOK creates a DTAServerTransformPipeOK with default headers values
func NewDTAServerTransformPipeOK() *DTAServerTransformPipeOK {
	return &DTAServerTransformPipeOK{}
}

/*DTAServerTransformPipeOK handles this case with default header values.

A successful response.
*/
type DTAServerTransformPipeOK struct {
	Payload *rest_models.DtaserviceTransformDocumentResponse
}

func (o *DTAServerTransformPipeOK) Error() string {
	return fmt.Sprintf("[POST /v1/document/transform-pipe][%d] dTAServerTransformPipeOK  %+v", 200, o.Payload)
}

func (o *DTAServerTransformPipeOK) GetPayload() *rest_models.DtaserviceTransformDocumentResponse {
	return o.Payload
}

func (o *DTAServerTransformPipeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_models.DtaserviceTransformDocumentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDTAServerTransformPipeDefault creates a DTAServerTransformPipeDefault with default headers values
func NewDTAServerTransformPipeDefault(code int) *DTAServerTransformPipeDefault {
	return &DTAServerTransformPipeDefault{
		_statusCode: code,
	}
}

/*DTAServerTransformPipeDefault handles this case with default header values.

An unexpected error response
*/
type DTAServerTransformPipeDefault struct {
	_statusCode int

	Payload *rest_models.RuntimeError
}

// Code gets the status code for the d t a server transform pipe default response
func (o *DTAServerTransformPipeDefault) Code() int {
	return o._statusCode
}

func (o *DTAServerTransformPipeDefault) Error() string {
	return fmt.Sprintf("[POST /v1/document/transform-pipe][%d] DTAServer_TransformPipe default  %+v", o._statusCode, o.Payload)
}

func (o *DTAServerTransformPipeDefault) GetPayload() *rest_models.RuntimeError {
	return o.Payload
}

func (o *DTAServerTransformPipeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
